name: CI/CD

on:
  push:
    branches:
      - main
      - feature/github_actions

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    permissions: write-all
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: true
      
      - name: Install Dependencies
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            sudo apt-get update && sudo apt-get install -y libboost-test-dev libglfw3-dev libglm-dev || { echo 'Failed to install dependencies'; exit 1; }
          else
            brew update && brew install boost glfw glm || { echo 'Failed to install dependencies'; exit 1; }
          fi
      
      - name: Build Project
        run: |
          cmake . -DPATCH_VERSION=${{ github.run_number }}
          cmake --build .
          cmake --build . --target package
      
      - name: Check if tag exists 
        id: check_tag_exists 
        run: |
          TAG="release-${{ github.run_number }}-${{ github.sha }}"
          git tag -l | grep -q "$TAG" && echo "tag_exists=true" >> $GITHUB_ENV || echo "tag_exists=false" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        if: env.tag_exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "release-${{ github.run_number }}-${{ github.sha }}"
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false 

      - name: Upload Release Asset 
        id: upload-release-asset 
        if: env.tag_exists == 'false'
        uses: actions/upload-release-asset@v1  
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  
          asset_path: ${{ matrix.os == 'ubuntu-latest' && format('./helloworld-0.0.{0}-Linux.deb', github.run_number) || format('./helloworld-0.0.{0}-macOS.pkg', github.run_number) }}  
          asset_name: ${{ matrix.os == 'ubuntu-latest' && format('helloworld-0.0.{0}-Linux.deb', github.run_number) || format('helloworld-0.0.{0}-macOS.pkg', github.run_number) }}  
          asset_content_type: ${{ matrix.os == 'ubuntu-latest' && 'application/vnd.debian.binary-package' || 'application/octet-stream' }} 