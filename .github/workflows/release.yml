name: CI/CD

on:
  push:
    branches:
      - main
      - feature/github_actions

jobs:
  build-linux:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: true
      
      - name: Install Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y libboost-test-dev libglfw3-dev libglm-dev || { echo 'Failed to install dependencies'; exit 1; }
      
      - name: Build Project
        run: |
          cmake . -DPATCH_VERSION=${{ github.run_number }}
          cmake --build .
          cmake --build . --target package

      - name: Check if Linux tag exists
        id: check_tag_exists_linux
        run: |
          TAG="release-linux-${{ github.run_number }}-${{ github.sha }}"
          git tag -l | grep -q "$TAG" && echo "tag_exists=true" >> $GITHUB_ENV || echo "tag_exists=false" >> $GITHUB_ENV

      - name: Create Linux Release
        id: create_release_linux
        if: env.tag_exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "release-linux-${{ github.run_number }}-${{ github.sha }}"
          release_name: Linux Release ${{ github.run_number }}
          draft: false
          prerelease: false 

      - name: Upload Linux Release Asset 
        id: upload-release-asset_linux 
        if: env.tag_exists == 'false'
        uses: actions/upload-release-asset@v1  
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        with:
          upload_url: ${{ steps.create_release_linux.outputs.upload_url }}  
          asset_path: ./helloworld-0.0.${{ github.run_number }}-Linux.deb  
          asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb  
          asset_content_type: application/vnd.debian.binary-package 

  build-macos:
    runs-on: macos-latest
    permissions: write-all
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: true
      
      - name: Install Dependencies
        run: |
          brew update && brew install boost glfw glm || { echo 'Failed to install dependencies'; exit 1; }
      
      - name: Build Project
        run: |
          cmake . -DPATCH_VERSION=${{ github.run_number }}
          cmake --build .
          cmake --build . --target package
      
      - name: Check if macOS tag exists 
        id: check_tag_exists_macos 
        run: |
          TAG="release-macos-${{ github.run_number }}-${{ github.sha }}"
          if git tag -l | grep -q "$TAG"; then
            echo "tag_exists=true" >> $GITHUB_ENV;
          else
            echo "tag_exists=false" >> $GITHUB_ENV;
          fi

      - name: Create macOS Release
        id: create_release_macos
        if: env.tag_exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "release-macos-${{ github.run_number }}-${{ github.sha }}"
          release_name: macOS Release ${{ github.run_number }}
          draft: false
          prerelease: false 

      - name: Upload macOS Release Asset 
        id: upload-release-asset_macos 
        if: env.tag_exists == 'false'
        uses: actions/upload-release-asset@v1  
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        with:
          upload_url: ${{ steps.create_release_macos.outputs.upload_url }}  
          asset_path: ./helloworld-0.0.${{ github.run_number }}-macOS.pkg  
          asset_name: helloworld-0.0.${{ github.run_number }}-macOS.pkg  
          asset_content_type: application/octet-stream 